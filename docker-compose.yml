version: "3.9"

services:
  sonarqube-db:
    image: postgres:14
    container_name: sonarqube-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - sonarqube-db
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

  app-db:
    image: postgres:14
    container_name: app-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - app_db_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d

  puzzle-todo-app:
    build: .
    container_name: puzzle-todo-app
    depends_on:
      - app-db
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./:/usr/src/app
    command: ["npm", "run", "start"]

  zap:
    image: ghcr.io/zaproxy/zaproxy:stable
    container_name: zap
    entrypoint: ["sleep", "infinity"]
    ports:
      - "8080:8080"
    volumes:
      - ./zap-reports:/zap/wrk

  trivy:
    image: aquasec/trivy:latest
    container_name: trivy
    entrypoint: ["sleep", "infinity"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./trivy-reports:/reports
      - trivy_cache:/root/.cache

volumes:
  sonarqube_db_data:
  sonarqube_data:
  sonarqube_extensions:
  app_db_data:
  trivy_cache:
