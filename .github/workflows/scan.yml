name: Security & Code Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: 1️⃣ Build Node App
    runs-on: ubuntu-latest
    steps:
      - name: 1️⃣-checkout-repo
        uses: actions/checkout@v4

      - name: 1️⃣-setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 1️⃣-install-dependencies
        run: npm ci

      - name: 1️⃣-build-typescript
        run: npm run build || true

  docker_build:
    name: 2️⃣ Docker Build & Save
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 2️⃣-checkout-repo
        uses: actions/checkout@v4

      - name: 2️⃣-build-docker-image
        run: docker build -t puzzle-todo-vulnerable:latest .

      - name: 2️⃣-save-docker-image
        run: docker save puzzle-todo-vulnerable:latest -o puzzle-todo-vulnerable.tar

      - name: 2️⃣-upload-docker-artifact
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image
          path: puzzle-todo-vulnerable.tar

  trivy_scan:
    name: 3️⃣ Trivy Security Scan
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: 3️⃣-download-docker-image
        uses: actions/download-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image

      - name: 3️⃣-load-docker-image
        run: docker load -i puzzle-todo-vulnerable.tar

      - name: 3️⃣-trivy-docker-image-scan
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: "puzzle-todo-vulnerable:latest"
          format: json
          output: trivy-fs-report.json

      - name: 3️⃣-trivy-filesystem-scan
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: fs
          input: .
          format: json
          output: trivy-fs-report.json

      - name: 3️⃣-upload-fs-json-report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-json
          path: trivy-fs-report.json

  sonar_scan:
    name: 4️⃣ SonarQube Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 4️⃣-checkout-repo
        uses: actions/checkout@v4

      - name: 4️⃣-sonar-scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=BagasDhitya_puzzle-todo-vulnerable
            -Dsonar.organization=bagasdhitya
            -Dsonar.sources=src
        env:
          SONAR_TOKEN: ${{ secrets.MY_SONAR_TOKEN }}

      - name: 4️⃣-upload-sonar-report
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-sonar-report
          path: .scannerwork

  zap_scan:
    name: 5️⃣ OWASP ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: 5️⃣-download-docker-image
        uses: actions/download-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image

      - name: 5️⃣-load-docker-image
        run: docker load -i puzzle-todo-vulnerable.tar

      - name: 5️⃣-create-docker-network
        run: docker network create zapnet

      - name: 5️⃣-run-app-container
        run: |
          docker run -d --name puzzle-todo-app --network zapnet -p 3000:3000 puzzle-todo-vulnerable:latest
          sleep 15
          docker ps
          docker logs puzzle-todo-app --tail 50

      - name: 5️⃣-prepare-zap-reports-folder
        run: mkdir -p zap-reports && chmod 777 zap-reports

      - name: 5️⃣-run-zap-baseline
        run: |
          docker run --rm --network zapnet \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://puzzle-todo-app:3000
