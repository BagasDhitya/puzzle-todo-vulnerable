name: Security & Code Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Node App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build || true

      - name: Build Docker image
        run: docker build -t puzzle-todo-vulnerable:latest .

      - name: Save Docker image
        run: docker save puzzle-todo-vulnerable:latest -o puzzle-todo-vulnerable.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image
          path: puzzle-todo-vulnerable.tar

  sonar_scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=BagasDhitya_puzzle-todo-vulnerable
            -Dsonar.organization=bagasdhitya
            -Dsonar.sources=src
        env:
          SONAR_TOKEN: ${{ secrets.MY_SONAR_TOKEN }}

      - name: Generate SonarQube HTML Report
        run: |
          # Jika menggunakan sonar-report-cli
          sonar-report -i .scannerwork -o sonar-report.html || echo "Sonar HTML generation skipped"

      - name: Upload SonarQube HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-sonar-html
          path: sonar-report.html

  trivy_scan:
    name: Docker Trivy Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image

      - name: Load Docker image
        run: docker load -i puzzle-todo-vulnerable.tar

      - name: Scan Docker image with Trivy (HTML)
        run: |
          docker run --rm -v $(pwd):/scan aquasecurity/trivy:0.31.0 \
            image --format template --template "@contrib/html.tpl" \
            -o trivy-report.html puzzle-todo-vulnerable:latest

      - name: Upload Trivy HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-trivy-html
          path: trivy-report.html

  zap_scan:
    name: OWASP ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: puzzle-todo-vulnerable-image

      - name: Load Docker image
        run: docker load -i puzzle-todo-vulnerable.tar

      - name: Create docker network
        run: docker network create zapnet || true

      - name: Run app container on custom network
        run: |
          docker run -d --name puzzle-todo-app --network zapnet -p 3000:3000 puzzle-todo-vulnerable:latest
          sleep 15
          docker ps
          docker logs puzzle-todo-app --tail 50

      - name: Prepare reports folder
        run: mkdir -p zap-reports && chmod 777 zap-reports

      - name: Run ZAP Baseline Scan (HTML)
        run: |
          docker run --rm --network zapnet \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://puzzle-todo-app:3000 \
            --autooff \
            -r zap-report.html \
            -J zap-report.json \
            -w zap-report.md

      - name: Upload ZAP HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-zap-html
          path: zap-reports/zap-report.html
