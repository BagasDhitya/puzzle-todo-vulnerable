name: Security & Code Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Node App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build || true

      - name: Start app in background (local runner only)
        run: |
          npm run start &
          sleep 10 # tunggu server siap

  sonar_scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=BagasDhitya_puzzle-todo-vulnerable
            -Dsonar.organization=bagasdhitya
            -Dsonar.sources=src
        env:
          SONAR_TOKEN: ${{ secrets.MY_SONAR_TOKEN }}

      - name: Upload SonarQube Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-sonar-report
          path: .scannerwork

  docker_build_and_scan:
    name: Docker Build & Trivy Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t puzzle-todo-vulnerable:latest .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.31.0
        with:
          image-ref: "puzzle-todo-vulnerable:latest"

      - name: Filesystem Scan with Trivy
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: fs
          dir: .
          format: json
          output: puzzle-todo-vulnerable-trivy-fs-report.json

      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-trivy-reports
          path: puzzle-todo-vulnerable-trivy-fs-report.json

  zap_scan:
    name: OWASP ZAP DAST Scan (Dockerized app)
    runs-on: ubuntu-latest
    needs: docker_build_and_scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure docker is available (info)
        run: docker --version

      - name: Run app container
        run: |
          # Run the built app image detached; map port 3000 so it's reachable
          docker run -d --name puzzle_todo_app -p 3000:3000 puzzle-todo-vulnerable:latest
          # wait for app to be ready
          sleep 15

      - name: Run ZAP Baseline Scan (container network = app)
        run: |
          # mount the workspace into /zap/wrk so ZAP writes reports back to the repo workspace
          # use --network container:puzzle_todo_app so localhost inside zap refers to the app container
          docker run --rm \
            --network container:puzzle_todo_app \
            -v "${{ github.workspace }}":/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t http://127.0.0.1:3000 \
              -J puzzle-todo-vulnerable-zap-report.json \
              -w puzzle-todo-vulnerable-zap-report.md \
              -r puzzle-todo-vulnerable-zap-report.html

      - name: Stop and remove app container
        if: always()
        run: |
          docker rm -f puzzle_todo_app || true

      - name: List generated ZAP files (debug)
        run: ls -l "${{ github.workspace }}" | sed -n '1,200p'

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: puzzle-todo-vulnerable-zap-report
          path: |
            puzzle-todo-vulnerable-zap-report.html
            puzzle-todo-vulnerable-zap-report.json
            puzzle-todo-vulnerable-zap-report.md
