name: Security & Code Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build Typescript
        run: npm run build

      # üîç Trivy FS Scan
      - name: üîé Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: fs
          input: .
          format: json
          output: trivy-fs-report.json

      - name: üì§ Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-json
          path: trivy-fs-report.json

      # üîç SonarQube / SonarCloud scan
      - name: üîé Sonar Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=BagasDhitya_puzzle-todo-vulnerable
            -Dsonar.organization=bagasdhitya
            -Dsonar.sources=src
        env:
          SONAR_TOKEN: ${{ secrets.MY_SONAR_TOKEN }}

      # üîç ZAP DAST Scan (tanpa Docker, jalanin app langsung)
      - name: ‚ñ∂Ô∏è Run App
        run: |
          npm run start &
          sleep 15

      - name: üîé OWASP ZAP Baseline Scan
        run: |
          docker run --rm \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://host.docker.internal:3000 \
            -r zap-report.html \
            -J zap-report.json \
            -w zap-report.md

      - name: üì§ Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-reports
          path: zap-reports
